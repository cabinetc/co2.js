{"version":3,"file":"co2.js","sources":["../node_modules/@tgwf/co2/dist/esm/1byte.js","../node_modules/@tgwf/co2/dist/esm/constants/file-size.js","../node_modules/@tgwf/co2/dist/esm/data/average-intensities.min.js","../node_modules/@tgwf/co2/dist/esm/constants/index.js","../node_modules/@tgwf/co2/dist/esm/helpers/index.js","../node_modules/@tgwf/co2/dist/esm/sustainable-web-design.js","../node_modules/@tgwf/co2/dist/esm/co2.js","../node_modules/@tgwf/co2/dist/esm/hosting-api.js","../node_modules/@tgwf/co2/dist/esm/hosting.js","../src/co2.js"],"sourcesContent":["const CO2_PER_KWH_IN_DC_GREY = 519;\nconst CO2_PER_KWH_NETWORK_GREY = 475;\nconst CO2_PER_KWH_IN_DC_GREEN = 0;\nconst KWH_PER_BYTE_IN_DC = 72e-12;\nconst FIXED_NETWORK_WIRED = 429e-12;\nconst FIXED_NETWORK_WIFI = 152e-12;\nconst FOUR_G_MOBILE = 884e-12;\nconst KWH_PER_BYTE_FOR_NETWORK = (FIXED_NETWORK_WIRED + FIXED_NETWORK_WIFI + FOUR_G_MOBILE) / 3;\nconst KWH_PER_BYTE_FOR_DEVICES = 13e-11;\nclass OneByte {\n  constructor(options) {\n    this.options = options;\n    this.KWH_PER_BYTE_FOR_NETWORK = KWH_PER_BYTE_FOR_NETWORK;\n  }\n  perByte(bytes, green) {\n    if (bytes < 1) {\n      return 0;\n    }\n    if (green) {\n      const Co2ForDC = bytes * KWH_PER_BYTE_IN_DC * CO2_PER_KWH_IN_DC_GREEN;\n      const Co2forNetwork = bytes * KWH_PER_BYTE_FOR_NETWORK * CO2_PER_KWH_NETWORK_GREY;\n      return Co2ForDC + Co2forNetwork;\n    }\n    const KwHPerByte = KWH_PER_BYTE_IN_DC + KWH_PER_BYTE_FOR_NETWORK;\n    return bytes * KwHPerByte * CO2_PER_KWH_IN_DC_GREY;\n  }\n}\nvar byte_default = OneByte;\nexport {\n  OneByte,\n  byte_default as default\n};\n","const GIGABYTE = 1e3 * 1e3 * 1e3;\nvar file_size_default = {\n  GIGABYTE\n};\nexport {\n  file_size_default as default\n};\n","const data = { \"AFG\": 120.48, \"AFRICA\": 510.26, \"ALB\": 23.44, \"DZA\": 498.9, \"ASM\": 687.5, \"AGO\": 195.98, \"ATG\": 657.14, \"ARG\": 344.31, \"ARM\": 222.68, \"ABW\": 591.4, \"ASEAN\": 505.72, \"ASIA\": 535.1, \"AUS\": 501.7, \"AUT\": 157.52, \"AZE\": 532.9, \"BHS\": 698.11, \"BHR\": 489.77, \"BGD\": 577.03, \"BRB\": 644.86, \"BLR\": 415.64, \"BEL\": 165.36, \"BLZ\": 484.38, \"BEN\": 666.67, \"BTN\": 24.44, \"BOL\": 323.87, \"BIH\": 517.24, \"BWA\": 794.52, \"BRA\": 102.09, \"BRN\": 658.85, \"BGR\": 399.57, \"BFA\": 611.43, \"BDI\": 250, \"CPV\": 600, \"KHM\": 400.46, \"CMR\": 278.26, \"CAN\": 125.84, \"CYM\": 684.93, \"CAF\": 0, \"TCD\": 677.42, \"CHL\": 332.61, \"CHN\": 533.98, \"COL\": 168.95, \"COM\": 714.29, \"COG\": 395.52, \"COD\": 25.36, \"COK\": 400, \"CRI\": 37.21, \"CIV\": 410.75, \"HRV\": 246.46, \"CUB\": 602.03, \"CYP\": 589.35, \"CZE\": 415.35, \"DNK\": 180.71, \"DJI\": 666.67, \"DMA\": 529.41, \"DOM\": 550.88, \"ECU\": 188.71, \"EGY\": 469.63, \"SLV\": 194.23, \"GNQ\": 492.96, \"ERI\": 688.89, \"EST\": 464.03, \"SWZ\": 189.19, \"ETH\": 25.19, \"EU\": 277.22, \"EUROPE\": 296.96, \"FLK\": 500, \"FRO\": 428.57, \"FJI\": 289.47, \"FIN\": 130.98, \"FRA\": 84.82, \"GUF\": 254.72, \"PYF\": 471.43, \"G20\": 442.38, \"G7\": 343.92, \"GAB\": 397.38, \"GMB\": 700, \"GEO\": 134.83, \"DEU\": 384.83, \"GHA\": 361.2, \"GRC\": 343.82, \"GRL\": 133.33, \"GRD\": 714.29, \"GLP\": 611.77, \"GUM\": 670.33, \"GTM\": 320.64, \"GIN\": 208.63, \"GNB\": 750, \"GUY\": 642.28, \"HTI\": 606.06, \"HND\": 375.1, \"HKG\": 683.97, \"HUN\": 222.97, \"ISL\": 28.56, \"IND\": 633.4, \"IDN\": 619.02, \"IRN\": 487.86, \"IRQ\": 498.87, \"IRL\": 346.33, \"ISR\": 548.03, \"ITA\": 371.69, \"JAM\": 519.54, \"JPN\": 494.86, \"JOR\": 399.91, \"KAZ\": 635.57, \"KEN\": 100.57, \"KIR\": 666.67, \"XKX\": 768.73, \"KWT\": 489.65, \"KGZ\": 104.43, \"LAO\": 242.18, \"LATIN AMERICA AND CARIBBEAN\": 241.91, \"LVA\": 181.82, \"LBN\": 594.75, \"LSO\": 20, \"LBR\": 304.35, \"LBY\": 550.42, \"LTU\": 194.25, \"LUX\": 168.14, \"MAC\": 491.53, \"MDG\": 483.25, \"MWI\": 133.8, \"MYS\": 543.87, \"MDV\": 651.52, \"MLI\": 466.08, \"MLT\": 495, \"MTQ\": 698.63, \"MRT\": 526.6, \"MUS\": 611.11, \"MEX\": 423.81, \"MIDDLE EAST\": 512.24, \"MDA\": 678.44, \"MNG\": 749.66, \"MNE\": 399.38, \"MSR\": 1e3, \"MAR\": 610.41, \"MOZ\": 126.63, \"MMR\": 344.37, \"NAM\": 63.69, \"NRU\": 750, \"NPL\": 24.51, \"NLD\": 355.78, \"NCL\": 610.12, \"NZL\": 97.73, \"NIC\": 354.21, \"NER\": 622.22, \"NGA\": 368.22, \"NORTH AMERICA\": 336.01, \"PRK\": 157.79, \"MKD\": 529.33, \"NOR\": 28.82, \"OCEANIA\": 449.43, \"OECD\": 341.08, \"OMN\": 488.27, \"PAK\": 344.16, \"PSE\": 465.12, \"PAN\": 192.14, \"PNG\": 526.75, \"PRY\": 25.49, \"PER\": 256.51, \"POL\": 634.58, \"PRT\": 234.03, \"PRI\": 681.47, \"QAT\": 489.68, \"REU\": 519.03, \"ROU\": 264.12, \"RUS\": 363.68, \"RWA\": 294.12, \"KNA\": 681.82, \"LCA\": 685.71, \"SPM\": 800, \"VCT\": 500, \"WSM\": 470.59, \"STP\": 600, \"SAU\": 557.78, \"SEN\": 523.13, \"SRB\": 569.38, \"SYC\": 615.39, \"SLE\": 47.62, \"SGP\": 488.78, \"SVK\": 140.67, \"SVN\": 237.38, \"SLB\": 727.27, \"SOM\": 634.15, \"ZAF\": 708.19, \"KOR\": 437.6, \"SSD\": 684.21, \"ESP\": 217.37, \"LKA\": 463, \"SDN\": 264.01, \"SUR\": 356.44, \"SWE\": 45.08, \"CHE\": 45.62, \"SYR\": 541.17, \"TWN\": 561.02, \"TJK\": 83.63, \"TZA\": 366.75, \"THA\": 501.57, \"PHL\": 582.05, \"TGO\": 460.32, \"TON\": 625, \"TTO\": 491.41, \"TUN\": 469.43, \"TUR\": 413.63, \"TKM\": 490.19, \"TCA\": 703.7, \"UGA\": 52.27, \"UKR\": 187.06, \"ARE\": 407.98, \"GBR\": 261.24, \"USA\": 367.26, \"URY\": 114.81, \"UZB\": 505.41, \"VUT\": 571.43, \"VEN\": 212.48, \"VNM\": 386.49, \"VGB\": 714.29, \"VIR\": 685.71, \"WORLD\": 437.26, \"YEM\": 543.91, \"ZMB\": 84.7, \"ZWE\": 392.28 };\nconst type = \"average\";\nvar average_intensities_min_default = { data, type };\nexport {\n  data,\n  average_intensities_min_default as default,\n  type\n};\n","import fileSize from \"./file-size.js\";\nimport averageIntensity from \"../data/average-intensities.min.js\";\nconst KWH_PER_GB = 0.81;\nconst END_USER_DEVICE_ENERGY = 0.52;\nconst NETWORK_ENERGY = 0.14;\nconst DATACENTER_ENERGY = 0.15;\nconst PRODUCTION_ENERGY = 0.19;\nconst GLOBAL_GRID_INTENSITY = averageIntensity.data[\"WORLD\"];\nconst RENEWABLES_GRID_INTENSITY = 50;\nconst FIRST_TIME_VIEWING_PERCENTAGE = 0.75;\nconst RETURNING_VISITOR_PERCENTAGE = 0.25;\nconst PERCENTAGE_OF_DATA_LOADED_ON_SUBSEQUENT_LOAD = 0.02;\nexport {\n  DATACENTER_ENERGY,\n  END_USER_DEVICE_ENERGY,\n  FIRST_TIME_VIEWING_PERCENTAGE,\n  GLOBAL_GRID_INTENSITY,\n  KWH_PER_GB,\n  NETWORK_ENERGY,\n  PERCENTAGE_OF_DATA_LOADED_ON_SUBSEQUENT_LOAD,\n  PRODUCTION_ENERGY,\n  RENEWABLES_GRID_INTENSITY,\n  RETURNING_VISITOR_PERCENTAGE,\n  fileSize\n};\n","import { averageIntensity } from \"../index.js\";\nimport {\n  GLOBAL_GRID_INTENSITY,\n  PERCENTAGE_OF_DATA_LOADED_ON_SUBSEQUENT_LOAD,\n  FIRST_TIME_VIEWING_PERCENTAGE,\n  RETURNING_VISITOR_PERCENTAGE\n} from \"../constants/index.js\";\nconst formatNumber = (num) => parseFloat(num.toFixed(2));\nfunction parseOptions(options) {\n  var _a, _b, _c, _d, _e, _f;\n  if (typeof options !== \"object\") {\n    throw new Error(\"Options must be an object\");\n  }\n  const adjustments = {};\n  if (options == null ? void 0 : options.gridIntensity) {\n    adjustments.gridIntensity = {};\n    const { device, dataCenter, network } = options.gridIntensity;\n    if (device) {\n      if (typeof device === \"object\") {\n        if (!averageIntensity.data[(_a = device.country) == null ? void 0 : _a.toUpperCase()]) {\n          console.warn(`\"${device.country}\" is not a valid country. Please use a valid 3 digit ISO 3166 country code. \nSee https://developers.thegreenwebfoundation.org/co2js/data/ for more information. \nFalling back to global average grid intensity.`);\n          adjustments.gridIntensity[\"device\"] = {\n            value: GLOBAL_GRID_INTENSITY\n          };\n        }\n        adjustments.gridIntensity[\"device\"] = {\n          country: device.country,\n          value: parseFloat(averageIntensity.data[(_b = device.country) == null ? void 0 : _b.toUpperCase()])\n        };\n      } else if (typeof device === \"number\") {\n        adjustments.gridIntensity[\"device\"] = {\n          value: device\n        };\n      } else {\n        adjustments.gridIntensity[\"device\"] = {\n          value: GLOBAL_GRID_INTENSITY\n        };\n        console.warn(`The device grid intensity must be a number or an object. You passed in a ${typeof device}. \nFalling back to global average grid intensity.`);\n      }\n    }\n    if (dataCenter) {\n      if (typeof dataCenter === \"object\") {\n        if (!averageIntensity.data[(_c = dataCenter.country) == null ? void 0 : _c.toUpperCase()]) {\n          console.warn(`\"${dataCenter.country}\" is not a valid country. Please use a valid 3 digit ISO 3166 country code. \nSee https://developers.thegreenwebfoundation.org/co2js/data/ for more information.  \nFalling back to global average grid intensity.`);\n          adjustments.gridIntensity[\"dataCenter\"] = {\n            value: GLOBAL_GRID_INTENSITY\n          };\n        }\n        adjustments.gridIntensity[\"dataCenter\"] = {\n          country: dataCenter.country,\n          value: parseFloat(averageIntensity.data[(_d = dataCenter.country) == null ? void 0 : _d.toUpperCase()])\n        };\n      } else if (typeof dataCenter === \"number\") {\n        adjustments.gridIntensity[\"dataCenter\"] = {\n          value: dataCenter\n        };\n      } else {\n        adjustments.gridIntensity[\"dataCenter\"] = {\n          value: GLOBAL_GRID_INTENSITY\n        };\n        console.warn(`The data center grid intensity must be a number or an object. You passed in a ${typeof dataCenter}. \nFalling back to global average grid intensity.`);\n      }\n    }\n    if (network) {\n      if (typeof network === \"object\") {\n        if (!averageIntensity.data[(_e = network.country) == null ? void 0 : _e.toUpperCase()]) {\n          console.warn(`\"${network.country}\" is not a valid country. Please use a valid 3 digit ISO 3166 country code. \nSee https://developers.thegreenwebfoundation.org/co2js/data/ for more information.  Falling back to global average grid intensity. \nFalling back to global average grid intensity.`);\n          adjustments.gridIntensity[\"network\"] = {\n            value: GLOBAL_GRID_INTENSITY\n          };\n        }\n        adjustments.gridIntensity[\"network\"] = {\n          country: network.country,\n          value: parseFloat(averageIntensity.data[(_f = network.country) == null ? void 0 : _f.toUpperCase()])\n        };\n      } else if (typeof network === \"number\") {\n        adjustments.gridIntensity[\"network\"] = {\n          value: network\n        };\n      } else {\n        adjustments.gridIntensity[\"network\"] = {\n          value: GLOBAL_GRID_INTENSITY\n        };\n        console.warn(`The network grid intensity must be a number or an object. You passed in a ${typeof network}. \nFalling back to global average grid intensity.`);\n      }\n    }\n  }\n  if (options == null ? void 0 : options.dataReloadRatio) {\n    if (typeof options.dataReloadRatio === \"number\") {\n      if (options.dataReloadRatio >= 0 && options.dataReloadRatio <= 1) {\n        adjustments.dataReloadRatio = options.dataReloadRatio;\n      } else {\n        adjustments.dataReloadRatio = PERCENTAGE_OF_DATA_LOADED_ON_SUBSEQUENT_LOAD;\n        console.warn(`The dataReloadRatio option must be a number between 0 and 1. You passed in ${options.dataReloadRatio}. \nFalling back to default value.`);\n      }\n    } else {\n      adjustments.dataReloadRatio = PERCENTAGE_OF_DATA_LOADED_ON_SUBSEQUENT_LOAD;\n      console.warn(`The dataReloadRatio option must be a number. You passed in a ${typeof options.dataReloadRatio}. \nFalling back to default value.`);\n    }\n  }\n  if (options == null ? void 0 : options.firstVisitPercentage) {\n    if (typeof options.firstVisitPercentage === \"number\") {\n      if (options.firstVisitPercentage >= 0 && options.firstVisitPercentage <= 1) {\n        adjustments.firstVisitPercentage = options.firstVisitPercentage;\n      } else {\n        adjustments.firstVisitPercentage = FIRST_TIME_VIEWING_PERCENTAGE;\n        console.warn(`The firstVisitPercentage option must be a number between 0 and 1. You passed in ${options.firstVisitPercentage}. \nFalling back to default value.`);\n      }\n    } else {\n      adjustments.firstVisitPercentage = FIRST_TIME_VIEWING_PERCENTAGE;\n      console.warn(`The firstVisitPercentage option must be a number. You passed in a ${typeof options.firstVisitPercentage}. \nFalling back to default value.`);\n    }\n  }\n  if (options == null ? void 0 : options.returnVisitPercentage) {\n    if (typeof options.returnVisitPercentage === \"number\") {\n      if (options.returnVisitPercentage >= 0 && options.returnVisitPercentage <= 1) {\n        adjustments.returnVisitPercentage = options.returnVisitPercentage;\n      } else {\n        adjustments.returnVisitPercentage = RETURNING_VISITOR_PERCENTAGE;\n        console.warn(`The returnVisitPercentage option must be a number between 0 and 1. You passed in ${options.returnVisitPercentage}. \nFalling back to default value.`);\n      }\n    } else {\n      adjustments.returnVisitPercentage = RETURNING_VISITOR_PERCENTAGE;\n      console.warn(`The returnVisitPercentage option must be a number. You passed in a ${typeof options.returnVisitPercentage}. \nFalling back to default value.`);\n    }\n  }\n  return adjustments;\n}\nexport {\n  formatNumber,\n  parseOptions\n};\n","\"use strict\";\nvar __defProp = Object.defineProperty;\nvar __defProps = Object.defineProperties;\nvar __getOwnPropDescs = Object.getOwnPropertyDescriptors;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __spreadValues = (a, b) => {\n  for (var prop in b || (b = {}))\n    if (__hasOwnProp.call(b, prop))\n      __defNormalProp(a, prop, b[prop]);\n  if (__getOwnPropSymbols)\n    for (var prop of __getOwnPropSymbols(b)) {\n      if (__propIsEnum.call(b, prop))\n        __defNormalProp(a, prop, b[prop]);\n    }\n  return a;\n};\nvar __spreadProps = (a, b) => __defProps(a, __getOwnPropDescs(b));\nimport {\n  fileSize,\n  KWH_PER_GB,\n  END_USER_DEVICE_ENERGY,\n  NETWORK_ENERGY,\n  DATACENTER_ENERGY,\n  PRODUCTION_ENERGY,\n  GLOBAL_GRID_INTENSITY,\n  RENEWABLES_GRID_INTENSITY,\n  FIRST_TIME_VIEWING_PERCENTAGE,\n  RETURNING_VISITOR_PERCENTAGE,\n  PERCENTAGE_OF_DATA_LOADED_ON_SUBSEQUENT_LOAD\n} from \"./constants/index.js\";\nimport { formatNumber } from \"./helpers/index.js\";\nclass SustainableWebDesign {\n  constructor(options) {\n    this.options = options;\n  }\n  energyPerByteByComponent(bytes) {\n    const transferedBytesToGb = bytes / fileSize.GIGABYTE;\n    const energyUsage = transferedBytesToGb * KWH_PER_GB;\n    return {\n      consumerDeviceEnergy: energyUsage * END_USER_DEVICE_ENERGY,\n      networkEnergy: energyUsage * NETWORK_ENERGY,\n      productionEnergy: energyUsage * PRODUCTION_ENERGY,\n      dataCenterEnergy: energyUsage * DATACENTER_ENERGY\n    };\n  }\n  co2byComponent(energyByComponent, carbonIntensity = GLOBAL_GRID_INTENSITY, options = {}) {\n    let deviceCarbonIntensity = GLOBAL_GRID_INTENSITY;\n    let networkCarbonIntensity = GLOBAL_GRID_INTENSITY;\n    let dataCenterCarbonIntensity = GLOBAL_GRID_INTENSITY;\n    let globalEmissions = GLOBAL_GRID_INTENSITY;\n    if (options == null ? void 0 : options.gridIntensity) {\n      const { device, network, dataCenter } = options.gridIntensity;\n      if (device == null ? void 0 : device.value) {\n        deviceCarbonIntensity = device.value;\n      }\n      if (network == null ? void 0 : network.value) {\n        networkCarbonIntensity = network.value;\n      }\n      if (dataCenter == null ? void 0 : dataCenter.value) {\n        dataCenterCarbonIntensity = dataCenter.value;\n      }\n    }\n    if (carbonIntensity === true) {\n      dataCenterCarbonIntensity = RENEWABLES_GRID_INTENSITY;\n    }\n    const returnCO2ByComponent = {};\n    for (const [key, value] of Object.entries(energyByComponent)) {\n      if (key.startsWith(\"dataCenterEnergy\")) {\n        returnCO2ByComponent[key.replace(\"Energy\", \"CO2\")] = value * dataCenterCarbonIntensity;\n      } else if (key.startsWith(\"consumerDeviceEnergy\")) {\n        returnCO2ByComponent[key.replace(\"Energy\", \"CO2\")] = value * deviceCarbonIntensity;\n      } else if (key.startsWith(\"networkEnergy\")) {\n        returnCO2ByComponent[key.replace(\"Energy\", \"CO2\")] = value * networkCarbonIntensity;\n      } else {\n        returnCO2ByComponent[key.replace(\"Energy\", \"CO2\")] = value * globalEmissions;\n      }\n    }\n    return returnCO2ByComponent;\n  }\n  perByte(bytes, carbonIntensity = false, segmentResults = false, options = {}) {\n    const energyBycomponent = this.energyPerByteByComponent(bytes, options);\n    if (typeof carbonIntensity !== \"boolean\") {\n      throw new Error(`perByte expects a boolean for the carbon intensity value. Received: ${carbonIntensity}`);\n    }\n    const co2ValuesbyComponent = this.co2byComponent(energyBycomponent, carbonIntensity, options);\n    const co2Values = Object.values(co2ValuesbyComponent);\n    const co2ValuesSum = co2Values.reduce((prevValue, currentValue) => prevValue + currentValue);\n    if (segmentResults) {\n      return __spreadProps(__spreadValues({}, co2ValuesbyComponent), { total: co2ValuesSum });\n    }\n    return co2ValuesSum;\n  }\n  perVisit(bytes, carbonIntensity = false, segmentResults = false, options = {}) {\n    const energyBycomponent = this.energyPerVisitByComponent(bytes, options);\n    if (typeof carbonIntensity !== \"boolean\") {\n      throw new Error(`perVisit expects a boolean for the carbon intensity value. Received: ${carbonIntensity}`);\n    }\n    const co2ValuesbyComponent = this.co2byComponent(energyBycomponent, carbonIntensity, options);\n    const co2Values = Object.values(co2ValuesbyComponent);\n    const co2ValuesSum = co2Values.reduce((prevValue, currentValue) => prevValue + currentValue);\n    if (segmentResults) {\n      return __spreadProps(__spreadValues({}, co2ValuesbyComponent), { total: co2ValuesSum });\n    }\n    return co2ValuesSum;\n  }\n  energyPerByte(bytes) {\n    const energyByComponent = this.energyPerByteByComponent(bytes);\n    const energyValues = Object.values(energyByComponent);\n    return energyValues.reduce((prevValue, currentValue) => prevValue + currentValue);\n  }\n  energyPerVisitByComponent(bytes, options = {}, firstView = FIRST_TIME_VIEWING_PERCENTAGE, returnView = RETURNING_VISITOR_PERCENTAGE, dataReloadRatio = PERCENTAGE_OF_DATA_LOADED_ON_SUBSEQUENT_LOAD) {\n    if (options.dataReloadRatio) {\n      dataReloadRatio = options.dataReloadRatio;\n    }\n    if (options.firstVisitPercentage) {\n      firstView = options.firstVisitPercentage;\n    }\n    if (options.returnVisitPercentage) {\n      returnView = options.returnVisitPercentage;\n    }\n    const energyBycomponent = this.energyPerByteByComponent(bytes);\n    const cacheAdjustedSegmentEnergy = {};\n    const energyValues = Object.values(energyBycomponent);\n    for (const [key, value] of Object.entries(energyBycomponent)) {\n      cacheAdjustedSegmentEnergy[`${key} - first`] = value * firstView;\n      cacheAdjustedSegmentEnergy[`${key} - subsequent`] = value * returnView * dataReloadRatio;\n    }\n    return cacheAdjustedSegmentEnergy;\n  }\n  energyPerVisit(bytes) {\n    let firstVisits = 0;\n    let subsequentVisits = 0;\n    const energyBycomponent = Object.entries(this.energyPerVisitByComponent(bytes));\n    for (const [key, val] of energyBycomponent) {\n      if (key.indexOf(\"first\") > 0) {\n        firstVisits += val;\n      }\n    }\n    for (const [key, val] of energyBycomponent) {\n      if (key.indexOf(\"subsequent\") > 0) {\n        subsequentVisits += val;\n      }\n    }\n    return firstVisits + subsequentVisits;\n  }\n  emissionsPerVisitInGrams(energyPerVisit, carbonintensity = GLOBAL_GRID_INTENSITY) {\n    return formatNumber(energyPerVisit * carbonintensity);\n  }\n  annualEnergyInKwh(energyPerVisit, monthlyVisitors = 1e3) {\n    return energyPerVisit * monthlyVisitors * 12;\n  }\n  annualEmissionsInGrams(co2grams, monthlyVisitors = 1e3) {\n    return co2grams * monthlyVisitors * 12;\n  }\n  annualSegmentEnergy(annualEnergy) {\n    return {\n      consumerDeviceEnergy: formatNumber(annualEnergy * END_USER_DEVICE_ENERGY),\n      networkEnergy: formatNumber(annualEnergy * NETWORK_ENERGY),\n      dataCenterEnergy: formatNumber(annualEnergy * DATACENTER_ENERGY),\n      productionEnergy: formatNumber(annualEnergy * PRODUCTION_ENERGY)\n    };\n  }\n}\nvar sustainable_web_design_default = SustainableWebDesign;\nexport {\n  SustainableWebDesign,\n  sustainable_web_design_default as default\n};\n","\"use strict\";\nimport OneByte from \"./1byte.js\";\nimport SustainableWebDesign from \"./sustainable-web-design.js\";\nimport {\n  GLOBAL_GRID_INTENSITY,\n  RENEWABLES_GRID_INTENSITY\n} from \"./constants/index.js\";\nimport { parseOptions } from \"./helpers/index.js\";\nclass CO2 {\n  constructor(options) {\n    this.model = new SustainableWebDesign();\n    if ((options == null ? void 0 : options.model) === \"1byte\") {\n      this.model = new OneByte();\n    } else if ((options == null ? void 0 : options.model) === \"swd\") {\n      this.model = new SustainableWebDesign();\n    } else if (options == null ? void 0 : options.model) {\n      throw new Error(`\"${options.model}\" is not a valid model. Please use \"1byte\" for the OneByte model, and \"swd\" for the Sustainable Web Design model.\nSee https://developers.thegreenwebfoundation.org/co2js/models/ to learn more about the models available in CO2.js.`);\n    }\n    this._segment = (options == null ? void 0 : options.results) === \"segment\";\n  }\n  perByte(bytes, green = false) {\n    return this.model.perByte(bytes, green, this._segment);\n  }\n  perVisit(bytes, green = false) {\n    var _a;\n    if ((_a = this.model) == null ? void 0 : _a.perVisit) {\n      return this.model.perVisit(bytes, green, this._segment);\n    } else {\n      throw new Error(`The perVisit() method is not supported in the model you are using. Try using perByte() instead.\nSee https://developers.thegreenwebfoundation.org/co2js/methods/ to learn more about the methods available in CO2.js.`);\n    }\n  }\n  perByteTrace(bytes, green = false, options = {}) {\n    var _a, _b, _c, _d, _e, _f;\n    let adjustments = {};\n    if (options) {\n      adjustments = parseOptions(options);\n    }\n    return {\n      co2: this.model.perByte(bytes, green, this._segment, adjustments),\n      green,\n      variables: {\n        description: \"Below are the variables used to calculate this CO2 estimate.\",\n        bytes,\n        gridIntensity: {\n          description: \"The grid intensity (grams per kilowatt-hour) used to calculate this CO2 estimate.\",\n          network: ((_b = (_a = adjustments == null ? void 0 : adjustments.gridIntensity) == null ? void 0 : _a.network) == null ? void 0 : _b.value) || GLOBAL_GRID_INTENSITY,\n          dataCenter: green ? RENEWABLES_GRID_INTENSITY : ((_d = (_c = adjustments == null ? void 0 : adjustments.gridIntensity) == null ? void 0 : _c.dataCenter) == null ? void 0 : _d.value) || GLOBAL_GRID_INTENSITY,\n          production: GLOBAL_GRID_INTENSITY,\n          device: ((_f = (_e = adjustments == null ? void 0 : adjustments.gridIntensity) == null ? void 0 : _e.device) == null ? void 0 : _f.value) || GLOBAL_GRID_INTENSITY\n        }\n      }\n    };\n  }\n  perVisitTrace(bytes, green = false, options = {}) {\n    var _a, _b, _c, _d, _e, _f, _g;\n    if ((_a = this.model) == null ? void 0 : _a.perVisit) {\n      let adjustments = {};\n      if (options) {\n        adjustments = parseOptions(options);\n      }\n      return {\n        co2: this.model.perVisit(bytes, green, this._segment, adjustments),\n        green,\n        variables: {\n          description: \"Below are the variables used to calculate this CO2 estimate.\",\n          bytes,\n          gridIntensity: {\n            description: \"The grid intensity (grams per kilowatt-hour) used to calculate this CO2 estimate.\",\n            network: ((_c = (_b = adjustments == null ? void 0 : adjustments.gridIntensity) == null ? void 0 : _b.network) == null ? void 0 : _c.value) || GLOBAL_GRID_INTENSITY,\n            dataCenter: green ? RENEWABLES_GRID_INTENSITY : ((_e = (_d = adjustments == null ? void 0 : adjustments.gridIntensity) == null ? void 0 : _d.dataCenter) == null ? void 0 : _e.value) || GLOBAL_GRID_INTENSITY,\n            production: GLOBAL_GRID_INTENSITY,\n            device: ((_g = (_f = adjustments == null ? void 0 : adjustments.gridIntensity) == null ? void 0 : _f.device) == null ? void 0 : _g.value) || GLOBAL_GRID_INTENSITY\n          },\n          dataReloadRatio: (adjustments == null ? void 0 : adjustments.dataReloadRatio) || 0.02,\n          firstVisitPercentage: (adjustments == null ? void 0 : adjustments.firstVisitPercentage) || 0.75,\n          returnVisitPercentage: (adjustments == null ? void 0 : adjustments.returnVisitPercentage) || 0.25\n        }\n      };\n    } else {\n      throw new Error(`The perVisitDetailed() method is not supported in the model you are using. Try using perByte() instead.\nSee https://developers.thegreenwebfoundation.org/co2js/methods/ to learn more about the methods available in CO2.js.`);\n    }\n  }\n  perDomain(pageXray, greenDomains) {\n    const co2PerDomain = [];\n    for (let domain of Object.keys(pageXray.domains)) {\n      let co2;\n      if (greenDomains && greenDomains.indexOf(domain) > -1) {\n        co2 = this.perByte(pageXray.domains[domain].transferSize, true);\n      } else {\n        co2 = this.perByte(pageXray.domains[domain].transferSize);\n      }\n      co2PerDomain.push({\n        domain,\n        co2,\n        transferSize: pageXray.domains[domain].transferSize\n      });\n    }\n    co2PerDomain.sort((a, b) => b.co2 - a.co2);\n    return co2PerDomain;\n  }\n  perPage(pageXray, green) {\n    const domainCO2 = this.perDomain(pageXray, green);\n    let totalCO2 = 0;\n    for (let domain of domainCO2) {\n      totalCO2 += domain.co2;\n    }\n    return totalCO2;\n  }\n  perContentType(pageXray, greenDomains) {\n    const co2PerContentType = {};\n    for (let asset of pageXray.assets) {\n      const domain = new URL(asset.url).domain;\n      const transferSize = asset.transferSize;\n      const co2ForTransfer = this.perByte(transferSize, greenDomains && greenDomains.indexOf(domain) > -1);\n      const contentType = asset.type;\n      if (!co2PerContentType[contentType]) {\n        co2PerContentType[contentType] = { co2: 0, transferSize: 0 };\n      }\n      co2PerContentType[contentType].co2 += co2ForTransfer;\n      co2PerContentType[contentType].transferSize += transferSize;\n    }\n    const all = [];\n    for (let type of Object.keys(co2PerContentType)) {\n      all.push({\n        type,\n        co2: co2PerContentType[type].co2,\n        transferSize: co2PerContentType[type].transferSize\n      });\n    }\n    all.sort((a, b) => b.co2 - a.co2);\n    return all;\n  }\n  dirtiestResources(pageXray, greenDomains) {\n    const allAssets = [];\n    for (let asset of pageXray.assets) {\n      const domain = new URL(asset.url).domain;\n      const transferSize = asset.transferSize;\n      const co2ForTransfer = this.perByte(transferSize, greenDomains && greenDomains.indexOf(domain) > -1);\n      allAssets.push({ url: asset.url, co2: co2ForTransfer, transferSize });\n    }\n    allAssets.sort((a, b) => b.co2 - a.co2);\n    return allAssets.slice(0, allAssets.length > 10 ? 10 : allAssets.length);\n  }\n  perParty(pageXray, greenDomains) {\n    let firstParty = 0;\n    let thirdParty = 0;\n    const firstPartyRegEx = pageXray.firstPartyRegEx;\n    for (let d of Object.keys(pageXray.domains)) {\n      if (!d.match(firstPartyRegEx)) {\n        thirdParty += this.perByte(pageXray.domains[d].transferSize, greenDomains && greenDomains.indexOf(d) > -1);\n      } else {\n        firstParty += this.perByte(pageXray.domains[d].transferSize, greenDomains && greenDomains.indexOf(d) > -1);\n      }\n    }\n    return { firstParty, thirdParty };\n  }\n}\nvar co2_default = CO2;\nexport {\n  CO2,\n  co2_default as default\n};\n","\"use strict\";\nfunction check(domain) {\n  if (typeof domain === \"string\") {\n    return checkAgainstAPI(domain);\n  } else {\n    return checkDomainsAgainstAPI(domain);\n  }\n}\nasync function checkAgainstAPI(domain) {\n  const req = await fetch(`https://api.thegreenwebfoundation.org/greencheck/${domain}`);\n  const res = await req.json();\n  return res.green;\n}\nasync function checkDomainsAgainstAPI(domains) {\n  try {\n    const apiPath = \"https://api.thegreenwebfoundation.org/v2/greencheckmulti\";\n    const domainsString = JSON.stringify(domains);\n    const req = await fetch(`${apiPath}/${domainsString}`);\n    const allGreenCheckResults = await req.json();\n    return greenDomainsFromResults(allGreenCheckResults);\n  } catch (e) {\n    return [];\n  }\n}\nfunction greenDomainsFromResults(greenResults) {\n  const entries = Object.entries(greenResults);\n  const greenEntries = entries.filter(([key, val]) => val.green);\n  return greenEntries.map(([key, val]) => val.url);\n}\nvar hosting_api_default = {\n  check\n};\nexport {\n  hosting_api_default as default\n};\n","\"use strict\";\nimport hostingAPI from \"./hosting-api.js\";\nfunction check(domain) {\n  return hostingAPI.check(domain);\n}\nvar hosting_default = {\n  check\n};\nexport {\n  hosting_default as default\n};\n","/**\n * Return an estimate of the carbon emissions produced by a page view.\n * @link https://developers.thegreenwebfoundation.org/co2js/overview/\n */\n\nimport { co2, hosting, averageIntensity } from '@tgwf/co2';\n\n(() => {\n\n  window.addEventListener('load', () => {\n\n    /**\n     * Check whether the current domain is served from a green web host.\n     * https://developers.thegreenwebfoundation.org/co2js/tutorials/check-hosting/\n     */\n\n    const domain = window.location.hostname;\n    hosting.check(domain).then((result) => {\n\n      const isGreenHost = result;\n      const emissions = new co2();\n\n      /**\n       * 1. Get average grid intensity data for all countries.\n       * 2. Set the country in which the hosting server is located.\n       * 3. Use average grid intensity data for the origin country.\n       */\n\n      const { data } = averageIntensity; /* 1 */\n      const origin = data.BEL; /* 2 */\n      const options = {\n        gridIntensity: {\n          dataCenter: origin /* 3 */\n        }\n      };\n\n      /**\n       * Iterate the array of `PerformanceEntry` objects and calculate the total\n       * number of transferred bytes.\n       * @link https://developer.mozilla.org/en-US/docs/Web/API/Performance/getEntries\n       */\n\n      let transferredBytes = 0;\n      let results = [];\n\n      let entries = performance.getEntries();\n      entries = entries.filter(entry => 'transferSize' in entry);\n\n      entries.forEach((entry) => {\n        transferredBytes = parseInt(transferredBytes + entry.transferSize);\n        results.push({\n          name: entry.name,\n          transferSize: entry.transferSize\n        });\n      });\n\n      results.sort((a, b) => b.transferSize - a.transferSize);\n\n      /**\n       * Estimate carbon emissions for the current page view and log the data\n       * in the console.\n       */\n\n      const estimate = emissions.perVisitTrace(transferredBytes, isGreenHost, options);\n      const grams = estimate.co2.toFixed(3);\n      const notice = `${results.length} requests emitted an estimated ${grams} grams of CO2. ${transferredBytes} bytes were transferred.`;\n\n      console.log(notice);\n    });\n  });\n})();\n"],"names":["KWH_PER_BYTE_IN_DC","KWH_PER_BYTE_FOR_NETWORK","byte_default","constructor","options","this","perByte","bytes","green","file_size_default","average_intensities_min_default","data","AFG","AFRICA","ALB","DZA","ASM","AGO","ATG","ARG","ARM","ABW","ASEAN","ASIA","AUS","AUT","AZE","BHS","BHR","BGD","BRB","BLR","BEL","BLZ","BEN","BTN","BOL","BIH","BWA","BRA","BRN","BGR","BFA","BDI","CPV","KHM","CMR","CAN","CYM","CAF","TCD","CHL","CHN","COL","COM","COG","COD","COK","CRI","CIV","HRV","CUB","CYP","CZE","DNK","DJI","DMA","DOM","ECU","EGY","SLV","GNQ","ERI","EST","SWZ","ETH","EU","EUROPE","FLK","FRO","FJI","FIN","FRA","GUF","PYF","G20","G7","GAB","GMB","GEO","DEU","GHA","GRC","GRL","GRD","GLP","GUM","GTM","GIN","GNB","GUY","HTI","HND","HKG","HUN","ISL","IND","IDN","IRN","IRQ","IRL","ISR","ITA","JAM","JPN","JOR","KAZ","KEN","KIR","XKX","KWT","KGZ","LAO","LVA","LBN","LSO","LBR","LBY","LTU","LUX","MAC","MDG","MWI","MYS","MDV","MLI","MLT","MTQ","MRT","MUS","MEX","MDA","MNG","MNE","MSR","MAR","MOZ","MMR","NAM","NRU","NPL","NLD","NCL","NZL","NIC","NER","NGA","PRK","MKD","NOR","OCEANIA","OECD","OMN","PAK","PSE","PAN","PNG","PRY","PER","POL","PRT","PRI","QAT","REU","ROU","RUS","RWA","KNA","LCA","SPM","VCT","WSM","STP","SAU","SEN","SRB","SYC","SLE","SGP","SVK","SVN","SLB","SOM","ZAF","KOR","SSD","ESP","LKA","SDN","SUR","SWE","CHE","SYR","TWN","TJK","TZA","THA","PHL","TGO","TON","TTO","TUN","TUR","TKM","TCA","UGA","UKR","ARE","GBR","USA","URY","UZB","VUT","VEN","VNM","VGB","VIR","WORLD","YEM","ZMB","ZWE","type","GLOBAL_GRID_INTENSITY","averageIntensity","FIRST_TIME_VIEWING_PERCENTAGE","RETURNING_VISITOR_PERCENTAGE","PERCENTAGE_OF_DATA_LOADED_ON_SUBSEQUENT_LOAD","formatNumber","num","parseFloat","toFixed","parseOptions","_a","_b","_c","_d","_e","_f","Error","adjustments","gridIntensity","device","dataCenter","network","country","toUpperCase","console","warn","value","dataReloadRatio","firstVisitPercentage","returnVisitPercentage","__defProp","Object","defineProperty","__defProps","defineProperties","__getOwnPropDescs","getOwnPropertyDescriptors","__getOwnPropSymbols","getOwnPropertySymbols","__hasOwnProp","prototype","hasOwnProperty","__propIsEnum","propertyIsEnumerable","__defNormalProp","obj","key","enumerable","configurable","writable","__spreadValues","a","b","prop","call","__spreadProps","sustainable_web_design_default","energyPerByteByComponent","energyUsage","fileSize","consumerDeviceEnergy","networkEnergy","productionEnergy","dataCenterEnergy","co2byComponent","energyByComponent","carbonIntensity","deviceCarbonIntensity","networkCarbonIntensity","dataCenterCarbonIntensity","globalEmissions","returnCO2ByComponent","entries","startsWith","replace","segmentResults","energyBycomponent","co2ValuesbyComponent","co2ValuesSum","values","reduce","prevValue","currentValue","total","perVisit","energyPerVisitByComponent","energyPerByte","firstView","returnView","cacheAdjustedSegmentEnergy","energyPerVisit","firstVisits","subsequentVisits","val","indexOf","emissionsPerVisitInGrams","carbonintensity","annualEnergyInKwh","monthlyVisitors","annualEmissionsInGrams","co2grams","annualSegmentEnergy","annualEnergy","co2_default","model","SustainableWebDesign","OneByte","_segment","results","perByteTrace","co2","variables","description","production","perVisitTrace","_g","perDomain","pageXray","greenDomains","co2PerDomain","domain","keys","domains","transferSize","push","sort","perPage","domainCO2","totalCO2","perContentType","co2PerContentType","asset","assets","URL","url","co2ForTransfer","contentType","all","dirtiestResources","allAssets","slice","length","perParty","firstParty","thirdParty","firstPartyRegEx","d","match","hosting_api_default","check","async","req","fetch","json","checkAgainstAPI","apiPath","domainsString","JSON","stringify","greenResults","filter","map","greenDomainsFromResults","e","checkDomainsAgainstAPI","hosting_default","hostingAPI","window","addEventListener","location","hostname","hosting","then","result","isGreenHost","emissions","transferredBytes","performance","getEntries","entry","forEach","parseInt","name","grams","notice","concat","log"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8]}